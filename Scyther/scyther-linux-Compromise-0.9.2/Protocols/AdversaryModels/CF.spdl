/* 
 * CF protocol
 */

// Hash functions
hashfunction h1,h2,exp;
hashfunction KDF;

hashfunction H,HE,add,mult;

usertype group;
usertype string;

const g: group;

/*
 * Hack to simulate g^ab = g^ba.
 * '@' prefix of protocol name denotes helper protocol, which is used by
 * Scyther for displaying, and such protocols are ignored in
 * auto-generation of protocol modifiers.
 */
protocol @pk(RA)
{
	role RA
	{
		send_!1(RA,RA, exp(g,sk(RA)) );
	}
}

protocol @exponentiation(RA,RB,RC)
{
	role RA
	{
		var alpha,beta, T1,T2: Ticket;

		recv_!1(RA,RA, exp(exp(g,T1),T2) );
		send_!2(RA,RA, exp(exp(g,T2),T1) );
	}
	role RB
	{
		var alpha,beta, T1,T2,T3: Ticket;

		recv_!3(RB,RB, H( exp(exp(g,T1),T2),T3) );
		send_!4(RB,RB, H( exp(exp(g,T2),T1),T3) );
	}
	role RC
	{
		var alpha,beta, T1,T2,T3: Ticket;

		recv_!5(RC,RC, H( T3,exp(exp(g,T1),T2) ) );
		send_!6(RC,RC, H( T3,exp(exp(g,T2),T1) ) );
	}
}

protocol @addmult(RA,RB,RC)
{
	role RA
	{
		var alpha,beta, T1,T2: Ticket;

		recv_!1(RA,RA, add(T1,T2) );
		send_!2(RA,RA, add(T2,T1) );
	}
	role RB
	{
		var alpha,beta, T1,T2: Ticket;

		recv_!3(RB,RB, mult(T1,T2) );
		send_!4(RB,RB, mult(T2,T1) );
	}
	role RC
	{
		var x,y: Nonce;
		var A1,A2: Agent;
		var T1: Ticket;

		recv_!5(RC,RC, 
		  H(
		    mult(
		      exp(exp(g,y),add(x,sk(RA))),
		      exp(exp(g,sk(RB)),add(x,sk(RA)))
		    )
		    , A1,A2,T1
		   )
		  );
		send_!6(RC,RC,
		  H(
		    mult(
		      exp(exp(g,x),add(y,sk(RB))),
		      exp(exp(g,sk(RA)),add(y,sk(RB)))
		    )
		    , A1,A2,T1
		   )
		  );
	}
}

// The protocol description

protocol CF(A,B)
{
	role A
	{
		fresh x: Nonce;
		var Y: Ticket;

		send_1(A,B,  { exp(g,x) }sk(A) );
		recv_2(B,A,  { Y }sk(B) );

		claim(A,SKR,
		  H(
		    mult(
		      exp(Y,add(x,sk(A))),
		      exp(exp(g,sk(B)),add(x,sk(A)))
		    )
		    , A,B, exp(g,x)
		   )
		  );
	}	
	
	role B
	{
		fresh y: Nonce;
		var X: Ticket;

		recv_1(A,B,  { X }sk(A) );
		send_2(B,A,  { exp(g,y) }sk(B) );

		claim(B,SKR,
		  H(
		    mult(
		      exp(X,add(y,sk(B))),
		      exp(exp(g,sk(A)),add(y,sk(B)))
		    )
		   , A,B, X
		   )
		  );
	}
}


