/* 
 * Two-move Diffie-Hellman from CK2001
 * Transformed using MT-authenticator based on encryption, my own
 * variant with two names in the MAC instead of one.
 */

// Hash functions
hashfunction h1,h2,g1,g2,MAC;

/*
 * Hack to simulate g^ab = g^ba.
 * '@' prefix of protocol name denotes helper protocol, which is used by
 * Scyther for displaying, and such protocols are ignored in
 * auto-generation of protocol modifiers.
 */
protocol @exponentiation(RA)
{
	role RA
	{
		var T1,T2: Ticket;

		recv_!1(RA,RA, g2(g1(T1),T2) );
		send_!2(RA,RA, g2(g1(T2),T1) );
	}
}

// The protocol description

protocol twoDH-MTencr-fix(I,R)
{
	role I
	{
		fresh x: Nonce;
		fresh s: Nonce;
		fresh Na: Nonce;
		var Nb: Nonce;
		var i: Nonce;
		var beta: Ticket;

		send_1a(I,R,  I,s,g1(x) );
		recv_1b(R,I,  { Nb }pk(I) );
		send_1c(I,R,  MAC(Nb,I,R,s,g1(x)) );
		send_Compromise(I,I, x);
		recv_2a(R,I,  R,s,beta );
		send_2b(I,R,  { Na }pk(R) );
		send_Compromise(I,I, Na);
		recv_2c(R,I,  MAC(Na,R,I,s,beta) );

		claim(I,SKR, g2(beta,x) );
	}	
	
	role R
	{
		fresh y: Nonce;
		fresh i: Nonce;
		fresh Nb: Nonce;
		var alpha: Ticket;
		var s: Nonce;
		var Na: Nonce;

		recv_1a(I,R,  I,s,alpha );
		send_1b(R,I,  { Nb }pk(I) );
		send_Compromise(R,R, Nb);
		recv_1c(I,R,  MAC(Nb,I,R,s,alpha) );
		send_2a(R,I,  R,s,g1(y) );
		send_Compromise(R,R, y);
		recv_2b(I,R,  { Na }pk(R) );
		send_2c(R,I,  MAC(Na,R,I,s,g1(y)) );

		claim(R,SKR, g2(alpha,y) );
	}
}

