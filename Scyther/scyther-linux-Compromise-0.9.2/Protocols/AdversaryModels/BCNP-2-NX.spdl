/* 
 * BoydCliffNietoPaterson 2008
 *
 * DH-variant of protocol, Naxossed
 */

hashfunction Expd,Ext;
hashfunction xor;
hashfunction Expo;
hashfunction h;

usertype Base;
const g: Base;

protocol @xorhelper(H1,H2,H3)
{
	role H1
	{
		var X,Y: Ticket;

		recv_!1(H1,H1, xor(X,Y) );
		send_!2(H1,H1, xor(Y,X) );
	}
	role H2
	{
		var X,Y,Z: Ticket;

		recv_!3(H2,H2, xor(X,xor(Y,Z)) );
		send_!4(H2,H2, xor(xor(X,Y),Z) );
	}
	role H3
	{
		var X,Y: Ticket;

		recv_!5(H3,H3, X,xor(X,Y) );
		send_!6(H3,H3, Y );
	}
}

// The protocol description

protocol BCNP-2-NX(I,R)
{
	role I
	{
		fresh Kap: Nonce;
		var Kbp: Ticket;
		var Y: Ticket;
		fresh a: Nonce;

		send_Compromise(I,I, h(sk(I),Kap));

		send_1(I,R, I, { h(sk(I),Kap) }pk(R),Expo(g,h(sk(I),a)) );
		recv_2(R,I, R, { Kbp }pk(I),Y );

		claim(I,SKR, xor( xor(Expd( Ext(h(sk(I),Kap)),  I, {h(sk(I),Kap)}pk(R), Expo(g,h(sk(I),a)), R, {Kbp}pk(I), Y ), 
		                      Expd( Ext(Kbp),  I, {h(sk(I),Kap)}pk(R), Expo(g,h(sk(I),a)), R, {Kbp}pk(I), Y )),
		                      Expd( Expo(Y,h(sk(I),a)), I, {h(sk(I),Kap)}pk(R), Expo(g,h(sk(I),a)), R, {Kbp}pk(I), Y )
		                )
		     );
	}	
	
	role R
	{
		var Kap: Ticket;
		fresh Kbp: Nonce;
		var X: Ticket;
		fresh b: Nonce;

		send_Compromise(R,R, h(sk(R),Kbp));

		recv_1(I,R, I, { Kap }pk(R),X );
		send_2(R,I, R, { h(sk(R),Kbp) }pk(I),Expo(g,h(sk(R),b)) );

		claim(R,SKR, xor( xor(Expd( Ext(Kap),  I, X, {Kap}pk(R), R, {h(sk(R),Kbp)}pk(I), Expo(g,h(sk(R),b)) ),
		                      Expd( Ext(h(sk(R),Kbp)),  I, X, {Kap}pk(R), R, {h(sk(R),Kbp)}pk(I), Expo(g,h(sk(R),b)) )),
		                      Expd( Expo(X,h(sk(R),b)), I, X, {Kap}pk(R), R, {h(sk(R),Kbp)}pk(I), Expo(g,h(sk(R),b)) )
		                )
		     );
	}
}

